#!/usr/bin/bash

set -o errexit
set -o pipefail

source .env

function ps {
    docker compose ps
}

function up {
    docker compose up "$@"
}

function down {
    docker compose down "$@"
}

function composer {
docker run --rm --interactive        \
-e COMPOSER_CACHE_DIR=/tmp/.composer/cache \
-u "$(id -u):$(id -g)" -v "$(pwd):/app"    \
-w /app composer:2.8.9 "$@"
}

function nginx:check {
    docker compose exec web nginx -t
}

function nginx:status {
    docker compose exec web service nginx status
}

function nginx:reload {
    docker compose exec web nginx -s reload
}

function nginx:restart {
    docker compose exec web service nginx restart
}

function nginx:stop {
    docker compose exec web service nginx stop
}

function nginx:start {
    docker compose exec web service nginx start
}

function php:console {
    docker compose exec php php -a
}

function test {
    TEST_PATH="${@:-tests}"
    docker compose run --rm php ./vendor/bin/phpunit --color ${TEST_PATH}
}

function phpcs {
    TEST_PATH="${@:-.tests}"
    docker compose run --rm php ./vendor/bin/phpcs ${TEST_PATH}
}

function phpcbf {
    TEST_PATH="${@:-tests}"
    docker compose run --rm php ./vendor/bin/phpcbf ${TEST_PATH}
}

function phpstan {
    TEST_PATH="${@:-}"
    docker compose run --rm php ./vendor/bin/phpstan ${TEST_PATH}
}

function db:console {
    docker compose exec db sh -c "MYSQL_PWD=${DB_PASSWORD} mysql -u ${DB_USERNAME} ${DB_DATABASE} --default-character-set utf8mb4"
}

function db:reset {
    docker compose cp database/schema.sql db:/tmp/
    docker compose exec db sh -c "MYSQL_PWD=${DB_PASSWORD} mysql -u ${DB_USERNAME} ${DB_DATABASE} --default-character-set utf8mb4 < /tmp/schema.sql"
}

function db:populate {
    docker compose exec php php database/Populate/populate.php
}


TIMEFORMAT=$'\ntask completed in %3lR'
time ${@}